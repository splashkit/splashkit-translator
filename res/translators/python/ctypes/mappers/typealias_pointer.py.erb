<%#
  Typealiases mappers map:
    __sklib_ptr to PascalType
    PascalType to __sklib_ptr
%>
_pointer_register = {}

def _find_pointer_resource(ptr, cls):
    if ptr in _pointer_register:
        return _pointer_register[ptr]
    else:
        module = __import__("splashkit")
        class_ = getattr(module, cls)
        instance = class_(ptr)
        _pointer_register[ptr] = instance
        return instance

def _free_pointer_resource(ptr):
    del _pointer_register[ptr]

def __skadapter__to_sklib_ptr(v):
    return v

def __skadapter__to_ptr(v):
    pass

<%
  @typealiases.pluck(:name).each do |typealias|
%>
def __skadapter__to_<%= typealias %>(v):
    return _find_pointer_resource(v, "<%= typealias.type_case %>")

<%
    if typealias == "json"
%>
def __skadapter__to_sklib_<%= typealias %>(v):
    if isinstance(v, c_void_p):
        return v
    return cast(v, c_void_p)

<%
    else
%>
def __skadapter__to_sklib_<%= typealias %>(v):
    return v

<%
    end
  end # typealiases.each
%>
